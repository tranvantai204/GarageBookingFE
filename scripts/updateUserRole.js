// Script ƒë·ªÉ c·∫≠p nh·∫≠t vai tr√≤ user trong database production
const mongoose = require('mongoose');

// K·∫øt n·ªëi t·ªõi database production (MongoDB Atlas)
const MONGO_URI = 'mongodb+srv://ryan24:ryan24@cluster0.z0zba9e.mongodb.net/haphuonggarage?retryWrites=true&w=majority';

// User schema
const userSchema = new mongoose.Schema({
  hoTen: { type: String, required: true },
  soDienThoai: { type: String, required: true, unique: true },
  matKhau: { type: String, required: true, select: false },
  vaiTro: { type: String, enum: ['user', 'admin'], default: 'user' },
}, { timestamps: true });

const User = mongoose.model('User', userSchema);

const updateUserRole = async () => {
  try {
    // K·∫øt n·ªëi database
    await mongoose.connect(MONGO_URI);
    console.log('ƒê√£ k·∫øt n·ªëi MongoDB Atlas');

    // T√¨m user v·ªõi s·ªë ƒëi·ªán tho·∫°i admin
    const adminPhone = '0123456789';
    const user = await User.findOne({ soDienThoai: adminPhone });
    
    if (user) {
      console.log('T√¨m th·∫•y user:', user.hoTen, user.soDienThoai);
      console.log('Vai tr√≤ hi·ªán t·∫°i:', user.vaiTro);
      
      // C·∫≠p nh·∫≠t vai tr√≤ th√†nh admin
      user.vaiTro = 'admin';
      await user.save();
      
      console.log('‚úÖ ƒê√£ c·∫≠p nh·∫≠t vai tr√≤ th√†nh admin');
    } else {
      console.log('‚ùå Kh√¥ng t√¨m th·∫•y user v·ªõi s·ªë ƒëi·ªán tho·∫°i:', adminPhone);
      
      // Li·ªát k√™ t·∫•t c·∫£ users
      const allUsers = await User.find({}).select('hoTen soDienThoai vaiTro');
      console.log('\nüìã Danh s√°ch t·∫•t c·∫£ users:');
      allUsers.forEach(u => {
        console.log(`- ${u.hoTen} (${u.soDienThoai}) - ${u.vaiTro}`);
      });
    }

    // Ki·ªÉm tra l·∫°i
    const updatedUser = await User.findOne({ soDienThoai: adminPhone });
    if (updatedUser) {
      console.log('\nüîç Ki·ªÉm tra l·∫°i:');
      console.log(`User: ${updatedUser.hoTen}`);
      console.log(`Phone: ${updatedUser.soDienThoai}`);
      console.log(`Role: ${updatedUser.vaiTro}`);
    }

    process.exit(0);
  } catch (error) {
    console.error('‚ùå L·ªói:', error.message);
    process.exit(1);
  }
};

updateUserRole();
